plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

ext.versions = [

        /* SDK and Tools*/
        compileSdkVersion : 32,
        minSdkVersion : 30,
        targetSdkVersion : 32,

        /* App*/
        adapterRxjava : '2.9.0',
        appAuth : '0.7.1',
        appcompat : '1.3.1',
        browser : '1.3.0',
        constraintlayout : '2.1.1',
        converterGson : '2.9.0',
        core_ktx_version : '1.6.0',
        dagger_hilt_version : '2.38.1',
        firebase_analytics_ktx : '20.1.2',
        firebase_crashlytics : '18.2.9',
        firebase_config : '21.0.1',
        firebase_config_ktx : '21.0.1',
        firebase_core : '19.0.2',
        firebase_messaging : '22.0.0',
        glide : '4.12.0',
        joda : '2.10.9.1',
        kotlin_version : '1.5.21',
        lifecycle : '2.3.1',
        lifecycle_comm : '2.3.1',
        lifecycle_ext : '2.2.0',
        loggingInterceptor : '4.9.0',
        material : '1.6.1',
        paging_version : '3.0.1',
        paging_compose : '1.0.0-alpha12',
        preference_ktx_version : '1.2.0',
        retrofit : '2.9.0',
        room : '2.5.0-alpha02',
        room_rxjava2 : '2.4.2',
        rxKotlin : '2.4.0',
        rxandroid : '2.1.1',
        rxjava : '2.2.12',
        volley : '1.2.1',
        flex_box_layout : '3.0.0',
        markdown : '4.6.2',
        prism4j : '2.0.0',
        worker : '2.7.1',
        work_testing : '1.0.1',
        firebase_bom : '29.1.0',
        shortcutbadger_version : '1.1.22@aar',

        /* Testing*/
        core_testing_version : '2.1.0',
        core_version : '1.4.0',
        espresso_version : '3.4.0',
        espresso_web_version : '3.4.0',
        ext_jUnit_version : '1.1.3',
        fragment_version : '1.3.6',
        junit_version : '4.13.2',
        rules_version : '1.4.0',
        runner_version : '1.3.0',
        hilt_version : '2.36',
        coroutines_test : '1.5.0'
]

android {
    compileSdkVersion versions.compileSdkVersion

    defaultConfig {
        applicationId "com.apx6.chipmunk"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 60001
        versionName "6.0.1"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.apx6.chipmunk.CustomTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation" : "$projectDir/schemas".toString(),
                        "room.incremental" : "true",
                        "room.expandProjection" : "true"
                ]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file('../../chipmunk_keystore/chipmunk_deploy.jks')
            storePassword System.getenv("CHIPMUNK_KEYSTORE_PW")
            keyAlias 'chipmunk_key'
            keyPassword System.getenv("CHPIMUNK_KEY_PW")
        }
    }

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
        density {
            // This property is set to true by default.
            enableSplit = true
        }
        abi {
            // This property is set to true by default.
            enableSplit = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    /* ONLY Hilt / Coroutine Test*/
    packagingOptions {
        // Multiple dependency bring these files in. Exclude them to enable
        // our test APK to build (has no effect on our AARs)
        excludes += "/META-INF/AL2.0"
        excludes += "/META-INF/LGPL2.1"
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        dataBinding = true
    }
}

configurations.all {
    exclude group: 'org.jetbrains', module: 'annotations-java5'
}

dependencies {

    /* Room*/
    implementation "androidx.room:room-runtime:$versions.room"
    implementation "androidx.room:room-rxjava2:$versions.room_rxjava2"
    implementation "androidx.room:room-ktx:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    /* Material*/
    implementation "com.google.android.material:material:$versions.material"

    /* Retrofit*/
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.converterGson"
    implementation "com.squareup.retrofit2:adapter-rxjava:$versions.adapterRxjava"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.adapterRxjava"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.loggingInterceptor"

    /* PreferenceManager*/
    implementation "androidx.preference:preference-ktx:$versions.preference_ktx_version"

    /* Glide*/
    implementation "com.github.bumptech.glide:glide:$versions.glide"

    /* Joda time*/
    implementation "net.danlew:android.joda:$versions.joda"

    /* Hilt*/
    implementation "com.google.dagger:hilt-android:$versions.dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$versions.dagger_hilt_version"

    /* Firebase*/
    implementation platform("com.google.firebase:firebase-bom:$versions.firebase_bom")
    implementation "com.google.firebase:firebase-analytics-ktx"

    /* Badge Count*/
    implementation "me.leolin:ShortcutBadger:$versions.shortcutbadger_version"

    androidTestImplementation "junit:junit:$versions.junit_version"
    androidTestImplementation "android.arch.work:work-testing:$versions.work_testing"
    androidTestImplementation "androidx.arch.core:core-testing:$versions.core_testing_version"
    androidTestImplementation "androidx.test:core-ktx:$versions.core_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$versions.espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$versions.espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$versions.ext_jUnit_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$versions.ext_jUnit_version"
    androidTestImplementation "androidx.test:rules:$versions.rules_version"
    androidTestImplementation "androidx.test:runner:$versions.runner_version"
    androidTestImplementation "androidx.fragment:fragment-testing:$versions.fragment_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$versions.espresso_web_version"

    debugImplementation "androidx.test:core:$versions.core_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.dagger_hilt_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines_test"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$versions.dagger_hilt_version"
}